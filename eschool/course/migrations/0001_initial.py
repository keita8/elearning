# Generated by Django 4.1.4 on 2022-12-25 12:39

import account.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("account", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Standard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Classe"
                    ),
                ),
                (
                    "year",
                    models.DateTimeField(
                        choices=[
                            (2000, 2000),
                            (2001, 2001),
                            (2002, 2002),
                            (2003, 2003),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                        ],
                        default=datetime.datetime.now,
                        verbose_name="Année académique",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=150, null=True, unique=True
                    ),
                ),
                ("description", tinymce.models.HTMLField()),
            ],
            options={
                "verbose_name": "Classe",
                "verbose_name_plural": "Classes",
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "subject_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Cours")),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        max_length=200,
                        null=True,
                        unique=True,
                    ),
                ),
                ("description", tinymce.models.HTMLField()),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=account.models.upload_image_path_course,
                    ),
                ),
                (
                    "standard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.standard",
                        verbose_name="Classe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cours",
                "verbose_name_plural": "Cours",
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "lesson_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Titre de la leçon"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "grade",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="Chapitre",
                    ),
                ),
                ("description", tinymce.models.HTMLField(blank=True, null=True)),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=account.models.upload_image_path_video,
                        validators=[
                            django.core.validators.FileExtensionValidator(["mp4"])
                        ],
                        verbose_name="contenu vidéo",
                    ),
                ),
                (
                    "pdf",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=account.models.upload_image_path_pdf,
                        validators=[
                            django.core.validators.FileExtensionValidator(["pdf"])
                        ],
                    ),
                ),
                (
                    "note",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=account.models.upload_image_path_pdf,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf", "ppt", "docs", "xls"]
                            )
                        ],
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de publication"
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instructor",
                        to="account.teacher",
                        verbose_name="Professeur",
                    ),
                ),
                (
                    "standard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.standard",
                        verbose_name="Classe",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.subject",
                        verbose_name="Cours",
                    ),
                ),
            ],
            options={
                "verbose_name": "Leçon",
                "verbose_name_plural": "Leçons",
                "ordering": ("grade",),
            },
        ),
    ]
