# Generated by Django 4.1.4 on 2022-12-25 12:39

import account.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import phonenumber_field.modelfields
import tinymce.models
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "ADMIN"),
                            ("STUDENT", "ETUDIANT"),
                            ("TEACHER", "ENSEIGNANT"),
                        ],
                        max_length=20,
                        verbose_name="Fonction",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_staff", models.BooleanField(default=False, verbose_name="staff")),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False, verbose_name="admin")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="activé ?"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="dernière connexion",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date d'inscription"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Compte",
                "verbose_name_plural": "Comptes",
            },
        ),
        migrations.CreateModel(
            name="TeacherProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("Masculin", "Mr"), ("Feminin", "Mme")],
                        max_length=20,
                        null=True,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "lastname",
                    models.CharField(max_length=100, verbose_name="Nom de famille"),
                ),
                ("firstname", models.CharField(max_length=100, verbose_name="Prénom")),
                (
                    "birth_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Date de naissance",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Téléphone",
                    ),
                ),
                ("bio", tinymce.models.HTMLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        upload_to=account.models.upload_image_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "png"]
                            )
                        ],
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Image Height"
                    ),
                ),
                (
                    "width",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Image Width"
                    ),
                ),
                (
                    "image_ppoi",
                    versatileimagefield.fields.PPOIField(
                        default="0.5x0.5", editable=False, max_length=20
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacherprofile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Adresse email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil enseignant",
                "verbose_name_plural": "Profil enseignant",
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("Masculin", "Mr"), ("Feminin", "Mme")],
                        max_length=20,
                        null=True,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        default="", max_length=100, verbose_name="Nom de famille"
                    ),
                ),
                (
                    "firstname",
                    models.CharField(default="", max_length=100, verbose_name="Prénom"),
                ),
                (
                    "birth_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Date de naissance",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Téléphone",
                    ),
                ),
                ("bio", tinymce.models.HTMLField(blank=True, null=True)),
                (
                    "avatar",
                    models.ImageField(
                        upload_to=account.models.upload_image_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "png"]
                            )
                        ],
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "image_ppoi",
                    versatileimagefield.fields.PPOIField(
                        default="0.5x0.5", editable=False, max_length=20
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="studentprofile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Adresse email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil etudiant",
                "verbose_name_plural": "Profil etudiant",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[],
            options={
                "verbose_name": "Etudiant",
                "verbose_name_plural": "Etudiant",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("account.account",),
            managers=[
                ("student", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[],
            options={
                "verbose_name": "Enseignant",
                "verbose_name_plural": "Enseignant",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("account.account",),
            managers=[
                ("teacher", django.db.models.manager.Manager()),
            ],
        ),
    ]
